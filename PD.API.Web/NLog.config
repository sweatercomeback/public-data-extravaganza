<?xml version="1.0" encoding="utf-8"?>
<nlog throwExceptions="true" internalLogFile="C:/Logs/PublicDataAPI/PublicDataLogDebug.txt" xmlns="http://www.nlog-project.org/schemas/NLog.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

    <!--<targets async="true">-->
    <targets async="false">
        <target name="InfoFile" xsi:type="File"
          fileName="C:/Logs/PublicDataAPI/${level}/PublicData_Info.txt"
          layout="${date:format=T} | ${logger} | ${message} | ${event-context:item=data}"
          archiveFileName="C:/Logs/PublicDataAPI/${level}/PublicData_Info_{##}.txt"
          archiveNumbering="Rolling"
          archiveEvery="day"
          maxArchiveFiles ="30"
          keepFileOpen="true"/>

        <target name="TraceFile" xsi:type="File"
          fileName="C:/Logs/PublicDataAPI/${level}/PublicData_Trace.txt"
          layout="${date:format=T} | ${logger} | ${message} | ${event-context:item=data}"
          archiveFileName="C:/Logs/PublicDataAPI/${level}/PublicData_Trace_{##}.txt"
          archiveNumbering="Rolling"
          archiveEvery="day"
          maxArchiveFiles ="7"
          keepFileOpen="true"/>

        <target name="ErrorFile" xsi:type="File"
          fileName="c:/Logs/PublicDataAPI/${level}/PublicData_Error.txt"
          layout="${date:format=T} | ${level} | ${logger} | ${message} | ${exception:format=message,shorttype,stacktrace}"
          archiveFileName="C:/Logs/PublicDataAPI/${level}/PublicData_Error_{##}.txt"
          archiveNumbering="Rolling"
          archiveEvery="day"
          maxArchiveFiles ="90"
          keepFileOpen="true"/>

        <!--<target type="Database" name="database" connectionstring="data source=sql.projecttruck.net;initial catalog=PublicDataConstruction;User ID=datauser;Password=w33z3rsucks!;persist security info=False;packet size=4096;Application Name=IL PubData API Logging">
            <commandText>
                INSERT INTO APIRequestLog ([CreateDate], [Origin], [LogLevel], [Message], [Exception], [StackTrace]) values (@createDate, @origin, @logLevel, @message, @exception, @stackTrace);
            </commandText>
            <parameter name="timeStamp" type="System.String" layout="${date}" />
            <parameter name="logLevel" type="System.String" layout="${level}" />
            <parameter name="logger" type="System.String" layout="${logger}" />
            <parameter name="apiName" type="System.String" layout="${event-context:item=applicationName}" />
            <parameter name="message" type="System.String" layout="${message}" />
            <parameter name="exception" type="System.String" layout="${exception:format=shorttype,message,stacktrace}" />
            <parameter name="callStack" type="System.String"  layout="${stacktrace:topFrames=6}"/>
            <parameter name="user" type="System.String" layout="${event-context:item=user}" />
            <parameter name="applicationVersion" type="System.String" layout="${event-context:item=applicationVersion}" />
            <parameter name="data" type="System.String" layout="${event-context:item=data}" />
        </target>
        
        <target name="n" xsi:type="AsyncWrapper">
            <target name="ws_error" xsi:type="WebService" namespace="https://www.practicevelocity.com/PVLoggingService"
                    protocol="Soap12"
                    methodName="LogError"
                    url="http://localhost:55849/APIsLogService.asmx">
                <parameter name="timeStamp" type="System.String" layout="${date}" />
                <parameter name="logLevel" type="System.String" layout="${level}" />
                <parameter name="logger" type="System.String" layout="${logger}" />
                <parameter name="apiName" type="System.String" layout="${event-context:item=applicationName}" />
                <parameter name="message" type="System.String" layout="${message}" />
                <parameter name="exception" type="System.String" layout="${exception:format=shorttype,message,stacktrace}" />
                <parameter name="callStack" type="System.String"  layout="${stacktrace:topFrames=6}"/>
                <parameter name="user" type="System.String" layout="${event-context:item=user}" />
                <parameter name="applicationVersion" type="System.String" layout="${event-context:item=applicationVersion}" />
                <parameter name="data" type="System.String" layout="${event-context:item=data}" />
            </target>
        </target>-->
    </targets>
    <!--   
        Log levels

        Each log message has associated log level, which identifies how important/detailed the message is. 
        NLog can route log messages based primarily on their logger name and log level.

        NLog supports the following log levels:

        Trace - very detailed logs, which may include high-volume information such as protocol payloads. This log level is typically only enabled during development
        Debug - debugging information, less detailed than trace, typically not enabled in production environment.
        Info - information messages, which are normally enabled in production environment
        Warn - warning messages, typically for non-critical issues, which can be recovered or which are temporary failures
        Error - error messages
        Fatal - very serious errors
    -->

    <rules>
        <!--Log all Info messages to the Info Web Service to insert into DB -->
        <!--<logger name="*" minlevel="Info" maxlevel="Info" writeTo="ws_info" />-->

        <!--Log all Warn, Error and Fatal exceptions to the Error Web Service to insert into DB -->
        <!--<logger name="*" minlevel="Warn" maxlevel="Fatal" writeTo="ws_error" />-->

        <!--Log all Trace and Debug to the Info WebService  to insert into DB  
        This uses the same web service and DB table as info but will Log 'A LOT MORE DATA' so this should be turned on
        only when we need to debug items running in production.
        To Disable this, simply comment out the next line of code
        To Enable this, simply uncomment the next line of code -->
        <!--<logger name="*" minlevel="Trace" maxlevel="Debug" writeTo="ws_info" />-->

        <!--The Following rules will Log all the same messages as above
        but do it to the local hard drive as a file.
        This is a fail safe logger in case we are having issues with the Web Service -->

        <!--Log all Info messages to the Info file-->
        <logger name="*" minlevel="Info" maxlevel="Info" writeTo="InfoFile" />

        <!--Log all Error messages to the Error file-->
        <logger name="*" minlevel="Error" maxlevel="Fatal" writeTo="ErrorFile" />

        <!--Log all Trace and Debug messages to the trace file 
        This uses the same web service and DB table as info but will Log 'A LOT MORE DATA' so this should be turned on
        only when we need to debug items running in production.
        To Disable this, simply comment out the next line of code
        To Enable this, simply uncomment the next line of code -->
        <logger name="*" minlevel="Trace" maxlevel="Debug" writeTo="TraceFile" />
    </rules>
</nlog>

